!function(e){var t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(s,n,function(t){return e[t]}.bind(null,n));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=9)}([function(e,t,i){e.exports=i.p+"ab65c472c6b592afe8757bb8be8c6267.png"},function(e,t,i){e.exports=i.p+"5c078847978a138d64371531f48bbdbd.wav"},function(e,t,i){e.exports=i.p+"84c22dc339b5f57e4b15287e0125a9e7.wav"},function(e,t,i){e.exports=i.p+"d4d17f1f4a0eee511856bf90569911c0.wav"},function(e,t,i){e.exports=i.p+"17f99c4e1534406164b4d67012374629.wav"},function(e,t,i){e.exports=i.p+"f912610ac78e8270b6341ec4e6d08d83.wav"},function(e,t,i){e.exports=i.p+"54af95b7b45424485b6ebf0361d019a3.wav"},function(e,t,i){e.exports=i.p+"aa8c51850c09e89bb9a47fb31ee31a38.wav"},function(e,t,i){e.exports=i.p+"9af88a6ac9cfbc392a941b4ed520d5f8.wav"},function(e,t,i){"use strict";i.r(t);var s={};i.r(s),i.d(s,"Player",function(){return De}),i.d(s,"Bullet",function(){return Oe}),i.d(s,"Enemy",function(){return Le}),i.d(s,"Flag",function(){return Ae}),i.d(s,"PowerupEvents",function(){return Ee}),i.d(s,"powerupEvents",function(){return Ce}),i.d(s,"Powerup",function(){return Re}),i.d(s,"Tank",function(){return we}),i.d(s,"Movable",function(){return xe});var n=i(0),o=i.n(n),r=i(1),a=i.n(r),h=i(2),c=i.n(h),l=i(3),p=i.n(l),u=i(4),d=i.n(u),m=i(5),g=i.n(m),y=i(6),f=i.n(y),v=i(7),x=i.n(v),w=i(8),b=i.n(w);function M(e,t){return e.x1<t.x2&&e.x2>t.x1&&e.y1<t.y2&&e.y2>t.y1}const T=e=>Math.floor(Math.random()*e);function k(e,t,i){const s=t/e;return Math.floor(i/s)}function S(e,t,i,s){const n=Math.min(k(t.length,i,s),t.length-1),{sprite:o,size:r}=t[n];return o(e,r)}var B,E,C,R,D,O,L;!function(e){e[e.Top=0]="Top",e[e.Bottom=1]="Bottom",e[e.Right=2]="Right",e[e.Left=3]="Left"}(B||(B={})),function(e){e[e.Default=0]="Default",e[e.Fast=1]="Fast",e[e.Armored=2]="Armored",e[e.Armored2=3]="Armored2",e[e.Armored3=4]="Armored3"}(E||(E={})),function(e){e[e.Helmet=0]="Helmet",e[e.Star=1]="Star",e[e.Stopwatch=2]="Stopwatch",e[e.Grenade=3]="Grenade",e[e.Tank=4]="Tank"}(C||(C={})),function(e){e[e.Default=0]="Default",e[e.First=1]="First",e[e.Second=2]="Second"}(R||(R={})),function(e){e[e.None=0]="None",e[e.Brick1=1]="Brick1",e[e.Brick2=2]="Brick2",e[e.Brick3=3]="Brick3",e[e.Brick4=4]="Brick4",e[e.Steel=5]="Steel",e[e.Ice=6]="Ice",e[e.Grass=7]="Grass",e[e.Water=8]="Water"}(D||(D={})),function(e){e[e.under=0]="under",e[e.main=1]="main",e[e.over=2]="over"}(O||(O={})),function(e){e.ArrowUp="ArrowUp",e.ArrowRight="ArrowRight",e.ArrowDown="ArrowDown",e.ArrowLeft="ArrowLeft",e.Space="Space"}(L||(L={}));const A=1/60,P={x:40,y:40},j={x:40,y:40},z={x:280,y:560},F={x:210,y:560},I={x:10,y:10},N=300,G={x:40,y:40},_={[R.Default]:{velocity:100,shotCD:50},[R.First]:{velocity:120,shotCD:40},[R.Second]:{velocity:150,shotCD:30}},W={[E.Default]:{velocity:100,shotCD:70,lives:1},[E.Fast]:{velocity:200,shotCD:60,lives:1},[E.Armored]:{velocity:120,shotCD:70,lives:3}},Q=35,q=35,H=200,U=200,K=600,J=200,V=400,X=300,Y=[{x:0,y:0},{x:560,y:0}],Z=20,$=document.getElementById("root"),ee=$.getContext("2d");ee.font="30px Arial",ee.textAlign="center";const te={canvas:$,context:ee,clearScreen(){ee.clearRect(0,0,$.width,$.height),ee.beginPath()},renderChaingingStage(e){const t=k(X,X,e);ee.fillRect(0,0,600,t),ee.fillRect(0,600-t,600,t)},renderGameOver(e=0){const t=k(X,X,e);ee.fillRect(0,0,600,300-t),ee.fillRect(0,300+t,600,300-t),e||he.sprites.gameOver({x:275,y:275},{x:50,y:50})},renderStartScreen(){he.sprites.logo({x:100,y:200},{x:400,y:200}),ee.strokeText("Press any key",300,500)}},ie=document.getElementById("dashboard"),se=ie.getContext("2d"),ne={canvas:ie,context:se,render(e,t,i){const{numberIcons:s,flagIcon:n,playerIcon:o,tankIcon:r}=he.sprites;((e,t)=>{if(!e.length)return;let i=70,s=0;e.forEach((e,n)=>{t(n%2==0?{x:695,y:i}:{x:670,y:i},{x:15,y:15}),2===s?(i+=20,s=0):s+=1})})(i,r),n({x:670,y:450},{x:50,y:40}),o({x:670,y:380},{x:20,y:20}),s[t]({x:690,y:485},{x:20,y:20}),s[e]({x:700,y:380},{x:20,y:20})},clearScreen(){se.clearRect(0,0,ie.width,ie.height),se.beginPath()}},oe=(e,t)=>(i,s,n,o)=>(r,a)=>{t.drawImage(e,i,s,n,o,r.x,r.y,a.x,a.y)},re=e=>{const t=oe(e,te.context),i=oe(e,ne.context);return{player:{[R.Default]:{[B.Top]:[t(0,0,16,15),t(16,0,16,15)],[B.Bottom]:[t(64,0,16,15),t(80,0,16,15)],[B.Right]:[t(96,0,16,15),t(112,0,16,15)],[B.Left]:[t(32,0,16,15),t(48,0,16,15)]},[R.First]:{[B.Top]:[t(0,32.3,16,15),t(15.7,32.5,16,15)],[B.Bottom]:[t(64,32.3,16,15),t(80,32.5,16,15)],[B.Right]:[t(96,32.3,16,15),t(112.3,32,16,15)],[B.Left]:[t(31.7,32,16,15),t(48,32,16,15)]},[R.Second]:{[B.Top]:[t(0,48,16,15),t(15.7,48,16,15)],[B.Bottom]:[t(64,48,16,15),t(80,48,16,15)],[B.Right]:[t(96,48,16,15),t(112.3,48,16,15)],[B.Left]:[t(31.7,48,16,15),t(48,48,16,15)]}},enemy:{[E.Default]:{[B.Top]:[t(128,0,16,15),t(144,0,16,15)],[B.Bottom]:[t(192,0,16,15),t(208,0,16,15)],[B.Right]:[t(223.7,0,16,15),t(239.7,0,16,15)],[B.Left]:[t(160,0,16,15),t(176,0,16,15)]},[E.Fast]:{[B.Top]:[t(128,80,16,15),t(144,80,16,15)],[B.Bottom]:[t(192,80,16,15),t(208,80,16,15)],[B.Right]:[t(224,80,16,15),t(240,80,16,15)],[B.Left]:[t(160,80,16,15),t(176,80,16,15)]},[E.Armored]:{1:{[B.Top]:[t(128.5,111.75,14.75,16),t(144.25,111.75,14.75,16)],[B.Bottom]:[t(191.75,111.75,15.25,16),t(207.5,111.75,15.25,16)],[B.Right]:[t(222.75,111.75,16,16),t(239,111.75,14.75,16)],[B.Left]:[t(159,111.75,16,16),t(174.75,111.75,16,16)]},2:{[B.Top]:[t(0,240,14.75,16),t(16,240,14.75,16)],[B.Bottom]:[t(64,240,15.25,16),t(80,240,15.25,16)],[B.Right]:[t(96,240,16,16),t(112,240,14.75,16)],[B.Left]:[t(32,240,16,16),t(48,240,16,16)]},3:{[B.Top]:[t(128,240,14.75,16),t(144,240,14.75,16)],[B.Bottom]:[t(192,240,15.25,16),t(208,240,15.25,16)],[B.Right]:[t(224,240,16,16),t(240,240,14.75,16)],[B.Left]:[t(160,240,16,16),t(176,240,16,16)]}}},bullet:{[B.Top]:[t(322.25,101.5,5,5.7)],[B.Bottom]:[t(338.5,101.5,5,5.7)],[B.Right]:[t(345.75,101.5,5,5.7)],[B.Left]:[t(329.5,101.5,5,5.7)]},flag:t(304.5,33,16,15.25),flagDeath:t(320,33,16,15.25),tankIcon:i(320.25,192.75,8.5,7.75),flagIcon:i(375.5,184,17,15),playerIcon:i(376.5,144.5,8,8.5),numberIcons:[i(328.5,184,8,7),i(336.5,184,8,7),i(344.5,184,8,7),i(352.5,184,8,7),i(360.5,184,8,7),i(328.5,192,8,7),i(336.5,192,8,7),i(344.5,192,8,7),i(352.5,192,8,7),i(360.5,192,8,7)],logo:t(0,260,375,137),tiles:{[D.Brick1]:t(256,0,8,7),[D.Brick2]:t(264,0,8,7),[D.Brick3]:t(256,8,8,7),[D.Brick4]:t(264,8,8,7),[D.Steel]:t(256,16,8,7),[D.Ice]:t(288,32,8,7),[D.Grass]:t(272,32,8,7),[D.Water]:t(256,40,8,7)},gameOver:t(288.5,184,31.2,16),powerup:{[C.Helmet]:t(255.5,112,16,14),[C.Stopwatch]:t(271.5,112,16,14),[C.Star]:t(303.5,112,16,14),[C.Grenade]:t(319.5,112,16,14),[C.Tank]:t(335.5,112,16,14)},invincible:[t(256,144,15.7,16),t(272.2,144,15.7,16)]}},ae=e=>{const t=oe(e,te.context);return{tankSpawn:[{sprite:t(303,97,15,14),size:{x:35,y:35}},{sprite:t(303,97,15,14),size:{x:35,y:35}},{sprite:t(288,97,15,14),size:{x:35,y:35}},{sprite:t(273,97,15,14),size:{x:30,y:30}},{sprite:t(257,97,15,14),size:{x:30,y:30}}],tankDestruction:[{sprite:t(336,128.75,32,32),size:{x:60,y:60}},{sprite:t(304.5,128.75,30.5,31.25),size:{x:60,y:60}},{sprite:t(288.25,128.75,16,15.5),size:{x:40,y:40}},{sprite:t(272.25,128.75,15.75,14.25),size:{x:37,y:37}},{sprite:t(258,128.75,13.75,13.25),size:{x:35,y:35}}]}};const he=new class{loadSprite(e){return new Promise((t,i)=>{const s=new Image;s.src=e,s.addEventListener("load",()=>{this.image=s,this.sprites=re(s),this.variableSprites=ae(s),t()})})}loadAudio(e){this.audio={};const t=Object.keys(e).map(t=>new Promise((i,s)=>{const n=new Audio;n.src=e[t],n.addEventListener("canplaythrough",()=>{this.audio[t]=n,i()})}));return Promise.all(t)}};const ce=new class{constructor(){this.queue=new Set}handleEvent(e,t){const{code:i,type:s}=e;return t.isWaitingForRestart()?t.restart():t.isStartScreen?t.play():void(L[i]&&("keydown"===s?this.queue.add(L[i]):this.queue.delete(L[i])))}getKey(){return Array.from(this.queue).pop()}listenToEvents(e){["keydown","keyup"].forEach(t=>{window.addEventListener(t,t=>{this.handleEvent(t,e)})})}},le=[[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,5,5,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,5,5,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0],[1,2,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,1,2],[5,5,0,0,3,4,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,4,0,0,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,1,2,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,3,4,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,0,1,2,1,2,0,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0]],[[0,0,0,0,1,2,5,5,1,2,1,2,5,5,1,2,5,5,1,2,1,2,5,5,1,2,0,0,0,0],[0,0,0,0,3,4,5,5,3,4,3,4,5,5,3,4,5,5,3,4,3,4,5,5,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,5,5,0,0,1,2,0,0,5,5,1,2,5,5,0,0,1,2,0,0,1,2,0,0,0,0],[0,0,0,0,5,5,0,0,3,4,0,0,5,5,3,4,5,5,0,0,3,4,0,0,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,2,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,0,7,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,1,2,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,0,7,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,1,2,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,0,7,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,5,0,6,6,6,6,6,0,7,0,7,0,7,7,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,5,7,6,6,6,6,6,7,0,7,0,7,0,7,0,0,0,0,0,0,0,0],[0,0,0,0,1,2,0,0,5,0,6,6,6,6,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,5,7,6,6,6,6,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,1,2,0,0,7,0,6,6,7,0,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,6,6,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,7,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,5,5,3,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0]]],pe=[[2,2,0,0,1,2,1,0,0,0],[2,2,0,0,1,2,1,0,0,0]],ue=[D.Brick1,D.Brick2,D.Brick3,D.Brick4,D.Steel,D.Water],de=[D.Grass,D.Water,D.None],me={[O.under]:[D.Ice,D.Water],[O.main]:[D.Brick1,D.Brick2,D.Brick3,D.Brick4,D.Steel],[O.over]:[D.Grass]};class ge{constructor(e){this.tiles=e.map(e=>[...e])}destroy(e){const t=Math.max(0,Math.floor(e.x/Z)),i=Math.max(0,Math.floor(e.y/Z));this.tiles[i][t]=D.None}lookup(e){const t=Math.min(Math.max(0,Math.floor(e.x/Z)),29),i=Math.min(Math.max(0,Math.floor(e.y/Z)),29);return{type:this.tiles[i][t],position:{x:t*Z,y:i*Z}}}lookupRange(e,t){let i=[];const s=Math.abs(e.x-t.x),n=Math.abs(e.y-t.y);return s>0&&s>Z?i.push({x:e.x+Z,y:e.y}):n>0&&n>Z&&i.push({x:e.x,y:e.y+Z}),[e,...i,t].map(e=>this.lookup(e))}renderLayer(e){this.tiles.forEach((t,i)=>{t.forEach((t,s)=>{me[e].includes(t)&&he.sprites.tiles[t]({x:s*Z,y:i*Z},{x:Z,y:Z})})})}}class ye{constructor(e){this.setupTracks(e)}setupTracks(e){this.tracks=e.reduce((e,t)=>{if("string"==typeof t)e[t]=he.audio[t].cloneNode();else{const{trackName:i,loop:s}=t;e[i]=he.audio[i].cloneNode(),e[i].loop=s}return e},{})}play(e){return this.tracks[e].play()}pause(e){return this.tracks[e].pause()}pauseAll(){Object.values(this.tracks).forEach(e=>e.pause())}}class fe{constructor(){this.timers={}}setTimer(e,t){this.timers[e]=t}getTimer(e){return this.timers[e]}some(e){return Object.entries(this.timers).some(t=>e.includes(t[0])&&t[1]>=0)}decrementTimers(){const e=Object.entries(this.timers).filter(e=>0===e[1]);e.length&&e.forEach(e=>{delete this.timers[e[0]]}),Object.keys(this.timers).forEach(e=>{this.timers[e]-=1})}}class ve{constructor(e,t){this.id=ve.numberGen,this.position=e,this.size=t,ve.numberGen+=1}update(){}render(){}resolveEntityCollision(e){}getBoundingBox(){const{x:e,y:t}=this.position,{x:i,y:s}=this.size;return{x1:e,x2:e+i,y1:t,y2:t+s}}deconstruct(){}}ve.numberGen=0;class xe extends ve{constructor(e,t,i){super(e,t),this.direction=i,this.prevPosition=Object.assign({},e)}resolveEdgeCollision(){}resolveTileCollision(e,t){}resolveEntityCollision(e){}move(e){this.prevPosition=Object.assign({},this.position),this.direction===B.Top?this.position.y-=e*A:this.direction===B.Bottom?this.position.y+=e*A:this.direction===B.Left?this.position.x-=e*A:this.direction===B.Right&&(this.position.x+=e*A)}goBack(){this.position=Object.assign({},this.prevPosition)}animateMovement(e){let t;t=this.direction===B.Left||this.direction===B.Right?this.position.x:this.position.y,e[Math.floor(t/.3)%e.length](this.position,this.size)}isOutOfScreen(){const e=this.getBoundingBox();return e.y1<0||e.y2>600||e.x1<0||e.x2>600}getFrontCollisionPoints(){const{x1:e,x2:t,y1:i,y2:s}=this.getBoundingBox();return this.direction===B.Top?[{x:e,y:i},{x:t,y:i}]:this.direction===B.Right?[{x:t,y:i},{x:t,y:s}]:this.direction===B.Bottom?[{x:e,y:s},{x:t,y:s}]:this.direction===B.Left?[{x:e,y:i},{x:e,y:s}]:void 0}}class we extends xe{constructor(e,t,i){super(e,t,i)}shot(e){if(this.timeManager.getTimer("shotCD"))return;let t;const{x:i,y:s}=I;t=this.direction===B.Top?{x:this.size.x/2+this.position.x-i/2,y:this.position.y-s}:this.direction===B.Right?{x:this.size.x+this.position.x,y:this.size.y/2+this.position.y-s/2}:this.direction===B.Bottom?{x:this.size.x/2+this.position.x-i/2,y:this.size.y+this.position.y}:{x:this.position.x-i,y:this.size.y/2+this.position.y-s/2},Pe.spawnEntity("Bullet",t,this.direction,this),this.timeManager.setTimer("shotCD",e)}die(){this.timeManager.setTimer("death",Q),this.soundManager.play("explode"),Pe.toRemove(this.id)}forgiveCollision(e){const[t,i]=this.getFrontCollisionPoints(),s=e.position;if(this.direction===B.Top||this.direction===B.Bottom){const e=Math.min(Math.abs(s.x-t.x),Math.abs(s.x-i.x));if(e>0&&e<5){return{x:this.position.x>s.x?s.x+Z:s.x-this.size.x,y:this.prevPosition.y}}}else if(this.direction===B.Left||this.direction===B.Right){const e=Math.min(Math.abs(s.y-t.y),Math.abs(s.y-i.y));if(e>0&&e<5){const e=this.position.y>s.y?s.y+Z:s.y-this.size.y;return{x:this.prevPosition.x,y:e}}}}}function be(e){return e instanceof we}function Me(e){return e instanceof De}function Te(e){return e instanceof Le}function ke(e){return e instanceof Oe}function Se(e){return e instanceof Ae}function Be(e){return e instanceof Re}class Ee{constructor(){this.observers={}}subscribe(e,t){this.observers[e]=t}unsubscribe(e){delete this.observers[e]}notify(e){Object.values(this.observers).forEach(t=>t(e))}}const Ce=new Ee;class Re extends ve{constructor(e,t){super(t,Object.assign({},G)),this.type=e,this.timeManager=new fe,this.soundManager=new ye(["powerup"]),this.timeManager.setTimer("live",K)}update(){const e=this.timeManager.getTimer("live");0===e?Pe.toRemove(this.id):e===J&&this.timeManager.setTimer("blink",J),this.timeManager.decrementTimers()}render(){const e=this.timeManager.getTimer("blink");e&&e%50==0||he.sprites.powerup[this.type](this.position,this.size)}resolveEntityCollision(e){Me(e)&&(Pe.toRemove(this.id),Ce.notify(this.type),this.soundManager.play("powerup"))}}class De extends we{constructor(){super(Object.assign({},F),Object.assign({},P),B.Top),this.lives=3,this.power=R.Default,this.timeManager=new fe,this.soundManager=new ye(["explode",{trackName:"neutral",loop:!0},{trackName:"move",loop:!0}]),this.timeManager.setTimer("spawn",q),this.timeManager.setTimer("invincible",H),Ce.subscribe(this.id,function(e){e===C.Tank?this.lives+=1:e===C.Helmet?this.timeManager.setTimer("invincible",H):e===C.Star&&this.power<R.Second&&(this.power+=1)}.bind(this))}update(){this.timeManager.decrementTimers();const e=this.timeManager.getTimer("death"),t=this.timeManager.getTimer("spawn");e?1===e&&this.respawn(!0):t||(this.soundManager.play("neutral"),this.processInput())}render(){const e=this.timeManager.getTimer("spawn"),t=this.timeManager.getTimer("death"),i=this.timeManager.getTimer("invincible");if(e)return S(this.position,he.variableSprites.tankSpawn,q,e);if(t)return S(this.position,he.variableSprites.tankDestruction,Q,t);if(i){const e=he.sprites.invincible;e[i%e.length](this.position,this.size)}this.animateMovement(he.sprites.player[this.power][this.direction])}processInput(){const e=ce.getKey();let t=!0;e===L.ArrowUp?this.direction=B.Top:e===L.ArrowDown?this.direction=B.Bottom:e===L.ArrowLeft?this.direction=B.Left:e===L.ArrowRight?this.direction=B.Right:(this.soundManager.pause("move"),t=!1),e===L.Space&&this.shot(_[this.power].shotCD),t&&(this.soundManager.pause("neutral"),this.soundManager.play("move"),this.move(_[this.power].velocity))}resolveEdgeCollision(){this.goBack()}resolveTileCollision(e){if(1===e.length){const t=this.forgiveCollision(e[0]);t?this.position=Object.assign({},t):this.goBack()}else this.goBack()}resolveEntityCollision(e){const t=this.timeManager.getTimer("death");if(!Be(e))if(ke(e)&&!t){if(this.timeManager.getTimer("invincible"))return;this.timeManager.setTimer("death",Q),this.soundManager.play("explode"),this.lives-=1,0===this.lives&&this.die()}else this.goBack()}respawn(e=!1){e&&(this.power=R.Default),this.soundManager.pauseAll(),this.timeManager.setTimer("spawn",q),this.timeManager.setTimer("invincible",H),this.position=Object.assign({},F),this.prevPosition=Object.assign({},F)}deconstruct(){this.soundManager.pauseAll(),Ce.unsubscribe(this.id)}}class Oe extends xe{constructor(e,t,i){super(e,Object.assign({},I),t),this.direction=t,this.shooter=i,this.soundManager=new ye(["hit","hitdmg"])}update(){this.move(N)}render(){this.animateMovement(he.sprites.bullet[this.direction])}resolveEdgeCollision(){Pe.toRemove(this.id)}resolveTileCollision(e,t){if(e.every(e=>de.includes(e.type)))return;Pe.toRemove(this.id);const i=Me(this.shooter)&&this.shooter.power===R.Second;e.some(e=>e.type===D.Steel)?this.soundManager.play("hit"):this.soundManager.play("hitdmg"),e.forEach(e=>{de.includes(e.type)||e.type===D.Steel&&!i||t.destroy(e.position)})}resolveEntityCollision(e){Be(e)||(Me(this.shooter)&&Te(e)&&e.type>=1&&this.soundManager.play("hit"),Pe.toRemove(this.id))}}class Le extends we{constructor(e,t){super(t,Object.assign({},P),B.Bottom),this.type=e,this.lives=W[e].lives,this.prevTile=Object.assign({},t),this.timeManager=new fe,this.soundManager=new ye(["explode"]),this.timeManager.setTimer("spawn",q),Ce.subscribe(this.id,function(e){e===C.Stopwatch?this.timeManager.setTimer("freeze",U):e===C.Grenade&&(this.timeManager.some(["death","spawn"])||this.die())}.bind(this))}update(){const e=this.timeManager.getTimer("spawn"),t=this.timeManager.getTimer("death"),i=this.timeManager.getTimer("freeze");if(this.timeManager.decrementTimers(),e){if(this.isSpawnSpotClear())return void this.timeManager.setTimer("spawn",q)}else{if(t||i)return;this.aiMove(),this.shot(W[this.type].shotCD)}}render(){const e=this.timeManager.getTimer("spawn"),t=this.timeManager.getTimer("death");return e?S(this.position,he.variableSprites.tankSpawn,q,e):t?S(this.position,he.variableSprites.tankDestruction,Q,t):void(this.type===E.Armored?this.animateMovement(he.sprites.enemy[this.type][this.lives][this.direction]):this.animateMovement(he.sprites.enemy[this.type][this.direction]))}aiMove(){const{velocity:e}=W[this.type];Math.abs(Math.floor(this.prevTile.x-this.position.x))>120||Math.abs(Math.floor(this.prevTile.y-this.position.y))>120?(this.prevTile=Object.assign({},this.position),this.setRandomDirection(),this.move(e)):this.move(e)}resolveEdgeCollision(){this.goBack(),this.setRandomDirection()}resolveTileCollision(e){if(1===e.length){const t=this.forgiveCollision(e[0]);t?this.position=Object.assign({},t):(this.setRandomDirection(),this.goBack())}else this.setRandomDirection(),this.goBack()}resolveEntityCollision(e){Be(e)||(ke(e)&&Me(e.shooter)?1===this.lives?this.die():this.lives-=1:Te(e)?(this.goBack(),this.setOpositeDirection()):Me(e)&&(this.timeManager.getTimer("shotCD")>10&&this.setOpositeDirection(),this.goBack()))}setRandomDirection(){const e=[B.Top,B.Right,B.Bottom,B.Left].filter(e=>e!==this.direction),t=Math.floor(Math.random()*e.length);this.direction=e[t]}setOpositeDirection(){this.direction===B.Top?this.direction=B.Bottom:this.direction===B.Bottom?this.direction=B.Top:this.direction===B.Right?this.direction=B.Left:this.direction=B.Right}isSpawnSpotClear(){return Pe.entities.filter(e=>e.id!==this.id&&!ke(e)).filter(e=>!Te(e)||!e.timeManager.getTimer("spawn")).some(e=>M(e.getBoundingBox(),this.getBoundingBox()))}deconstruct(){Ce.unsubscribe(this.id)}}class Ae extends ve{constructor(){super(z,j),this.isDestroyed=!1}render(){this.isDestroyed?he.sprites.flagDeath(this.position,this.size):he.sprites.flag(this.position,this.size)}resolveEntityCollision(e){ke(e)&&(this.isDestroyed=!0)}}const Pe=new class{constructor(){this.toRemove=(e=>{this.toRemoveQueue.add(e)}),this.removeFromQueue=(()=>{this.toRemoveQueue.forEach(e=>{const t=this.pool[e];this._checkDeath(t)||(delete this.pool[e],t.deconstruct(),this.toRemoveQueue.delete(e))})}),this.pool={},this.toRemoveQueue=new Set}spawnEntity(e,...t){const i=new s[e](...t);this.pool[i.id]=i}getEnemies(){return this.entities.filter(Te)}getPlayer(){return this.entities.find(Me)}getFlag(){return this.entities.find(Se)}render(){this.entities.forEach(e=>e.render())}update(){this.entities.forEach(e=>e.update())}checkCollisions(e){const t=new Set;this.entities.forEach(i=>{Be(i)||Se(i)||(this.checkTileCollision(i,e),this.checkEntitiesCollision(i,t),t.add(i.id))})}checkTileCollision(e,t){if(e.isOutOfScreen())e.resolveEdgeCollision();else{const[i,s]=e.getFrontCollisionPoints(),n=t.lookupRange(i,s).filter(e=>ue.includes(e.type)).filter(t=>M(e.getBoundingBox(),{x1:t.position.x,x2:t.position.x+Z,y1:t.position.y,y2:t.position.y+Z}));n.length&&e.resolveTileCollision(n,t)}}checkEntitiesCollision(e,t){this.entities.forEach(i=>{e.id===i.id||t.has(i.id)||this._isInteractive(i)&&M(e.getBoundingBox(),i.getBoundingBox())&&(e.resolveEntityCollision(i),i.resolveEntityCollision(e))})}clear(e=!0){if(e)Object.values(this.pool).forEach(e=>e.deconstruct()),this.pool={};else{const e=this.getPlayer();Object.values(this.pool).filter(t=>t.id!==e.id).forEach(e=>e.deconstruct()),this.pool={[e.id]:e}}this.toRemoveQueue=new Set}_isInteractive(e){return!be(e)||!e.timeManager.some(["spawn","death"])}_checkDeath(e){if(be(e))return e.timeManager.getTimer("death")}get entities(){return Object.values(this.pool)}};class je{constructor(e,t,i){this.number=e,this.map=t,this.tanks=[...i],this.powerupsAvailable=5,this.timeManager=new fe,this.soundManager=new ye(["start"]),this.timeManager.setTimer("powerupSpawnCD",K),this.soundManager.play("start"),Pe.spawnEntity("Flag")}update(){this.timeManager.decrementTimers(),this.spawnEnemy(),this.spawnPowerup()}isFinish(){const e=Pe.getEnemies();return!this.tanks.length&&!e.length}spawnEnemy(){const e=this.timeManager.getTimer("enemySpawnCD"),t=Pe.getEnemies();if(!this.tanks.length||t.length>4||e)return;const i=T(2);this.timeManager.setTimer("enemySpawnCD",V),Pe.spawnEntity("Enemy",this.tanks.pop(),Object.assign({},Y[i]))}spawnPowerup(){if(this.timeManager.getTimer("powerupSpawnCD")||!this.powerupsAvailable)return;const e=T(Object.keys(C).length/2);Pe.spawnEntity("Powerup",C[C[e]],{x:T(500),y:T(500)}),this.timeManager.setTimer("powerupSpawnCD",K),this.powerupsAvailable-=1}render(){this.map.renderLayer(O.under),this.map.renderLayer(O.main),Pe.render(),this.map.renderLayer(O.over)}get screenNum(){return this.number+1}}class ze{constructor(){this.isStartScreen=!0,this.isLost=!1,this.timeManager=new fe,this.soundManager=new ye(["gameover"])}createLoop(){let e=0,t=0;const i=s=>{for(e+=(s-t)/1e3;e>A;)this.update(),e-=A;this.render(),t=s,requestAnimationFrame(i)};i(0)}update(){this.timeManager.decrementTimers();const e=this.timeManager.getTimer("screenFade");if(this.isLost||this.isStartScreen||e)return;this.stage.update(),Pe.update(),Pe.checkCollisions(this.stage.map),Pe.removeFromQueue();const t=Pe.getPlayer(),i=Pe.getFlag();if(!t||i.isDestroyed)return t&&t.soundManager.pauseAll(),this.gameOver();this.stage.isFinish()&&this.toNextStage()}render(){te.clearScreen(),ne.clearScreen(),this.isStartScreen?te.renderStartScreen():this.renderGame()}renderGame(){const e=this.timeManager.getTimer("screenFade");if(this.stage.render(),this.isLost)te.renderGameOver(e);else if(e)te.renderChaingingStage(e);else{const e=Pe.getPlayer();ne.render(e.lives,this.stage.screenNum,this.stage.tanks)}}gameOver(){this.soundManager.play("gameover"),this.timeManager.setTimer("screenFade",X),this.isLost=!0}isWaitingForRestart(){return!this.timeManager.getTimer("screenFade")&&this.isLost}getNextStageNum(){let e=this.stage.number+1;return e>le.length-1&&(e=0),e}toNextStage(){this.timeManager.setTimer("screenFade",X),Pe.clear(!1);const e=this.getNextStageNum(),t=Pe.getPlayer();this.stage=new je(e,new ge(le[e]),pe[e]),t.respawn()}play(){this.isStartScreen=!1,Pe.spawnEntity("Player"),this.timeManager.setTimer("screenFade",X),this.stage=new je(0,new ge(le[0]),pe[0])}restart(){this.isLost=!1,Pe.clear(),this.play()}}!async function(){await Promise.all([he.loadSprite(o.a),he.loadAudio({explode:a.a,hit:c.a,hitdmg:p.a,neutral:d.a,powerup:g.a,move:f.a,start:x.a,gameover:b.a})]);const e=new ze;ce.listenToEvents(e),e.createLoop()}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,